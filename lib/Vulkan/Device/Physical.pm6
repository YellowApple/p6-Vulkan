unit class Vulkan::Device::Physical is repr('CPointer');

use NativeCall;

our enum Type (
    Other => 0,
    IntegratedGPU => 1,
    DiscreteGPU => 2,
    VirtualGPU => 3,
    CPU => 4
);

our class Features is repr('CStruct') {
    has Bool $.robust-buffer-access;
    has Bool $.full-draw-index-uint32;
    has Bool $.image-cube-array;
    has Bool $.independent-blend;
    has Bool $.geometry-shader;
    has Bool $.tessellation-shader;
    has Bool $.sample-rate-shading;
    has Bool $.dual-source-blend;
    has Bool $.logic-operator;
    has Bool $.multi-draw-indirect;
    has Bool $.draw-indirect-first-instance;
    has Bool $.depth-clamp;
    has Bool $.depth-bias-clamp;
    has Bool $.fill-mode-non-solid;
    has Bool $.depth-bounds;
    has Bool $.wide-lines;
    has Bool $.large-points;
    has Bool $.alpha-to-one;
    has Bool $.multi-viewport;
    has Bool $.sampler-anisotropy;
    has Bool $.ETC2-texture-compression;
    has Bool $.ASTC_LDR-texture-compression;
    has Bool $.BC-texture-compression;
    has Bool $.occlusion-query-precise;
    has Bool $.pipeline-statistics-query;
    has Bool $.vertex-pipeline-stores-and-atomics;
    has Bool $.fragment-stores-and-atomics;
    has Bool $.shader-tessellation-and-geometry-point-size;
    has Bool $.shader-image-gather-extended;
    has Bool $.shader-storage-image-extended-formats;
    has Bool $.shader-storage-image-multisample;
    has Bool $.shader-storage-image-read-without-format;
    has Bool $.shader-storage-image-write-without-format;
    has Bool $.shader-uniform-buffer-array-dynamic-indexing;
    has Bool $.shader-sampled-image-array-dynamic-indexing;
    has Bool $.shader-storage-buffer-array-dynamic-indexing;
    has Bool $.shader-storage-image-array-dynamic-indexing;
    has Bool $.clip-distance;
    has Bool $.cull-distance;
    has Bool $.shader-num64;
    has Bool $.shader-int64;
    has Bool $.shader-int32;
    has Bool $.shader-resource-residency;
    has Bool $.shader-resource-min-lod;
    has Bool $.sparse-binding;
    has Bool $.sparse-residency-buffer;
    has Bool $.sparse-residency-image-2d;
    has Bool $.sparse-residency-image-3d;
    has Bool $.sparse-residency-2-samples;
    has Bool $.sparse-residency-4-samples;
    has Bool $.sparse-residency-8-samples;
    has Bool $.sparse-residency-16-samples;
    has Bool $.sparse-residency-aliased;
    has Bool $.variable-multisample-rate;
    has Bool $.inherited-queries;
}

our class Limits is repr('CStruct') {
    has uint32 $.max-image-dimension-1d;
    has uint32 $.max-image-dimension-2d;
    has uint32 $.max-image-dimension-3d;
    has uint32 $.max-image-dimension-cube;
    has uint32 $.max-image-array-layers;
    has uint32 $.max-texel-buffer-elements;
    has uint32 $.max-uniform-buffer-range;
    has uint32 $.max-storage-buffer-range;
    has uint32 $.max-push-constants-size;
    has uint32 $.max-memory-allocation-count;
    has uint32 $.max-sampler-allocation-count;
    has uint64 $.buffer-image-granularity;
    has uint64 $.sparse-address-space-size;
    has uint32 $.max-bound-descriptor-sets;
    has uint32 $.max-per-stage-descriptor-samplers;
    has uint32 $.max-per-stage-descriptor-uniform-buffers;
    has uint32 $.max-per-stage-descriptor-storage-buffers;
    has uint32 $.max-per-stage-descriptor-sampled-images;
    has uint32 $.max-per-stage-descriptor-storage-images;
    has uint32 $.max-per-stage-descriptor-input-attachments;
    has uint32 $.max-per-stage-resources;
    has uint32 $.max-descriptor-set-samplers;
    has uint32 $.max-descriptor-set-uniform-buffers;
    has uint32 $.max-descriptor-set-uniform-buffers-dynamic;
    has uint32 $.max-descriptor-set-storage-buffers;
    has uint32 $.max-descriptor-set-storage-buffers-dynamic;
    has uint32 $.max-descriptor-set-sampled-images;
    has uint32 $.max-descriptor-set-storage-images;
    has uint32 $.max-descriptor-set-input-attachments;
    has uint32 $.max-vertex-input-attributes;
    has uint32 $.max-vertex-input-bindings;
    has uint32 $.max-vertex-input-attribute-offset;
    has uint32 $.max-vertex-input-binding-stride;
    has uint32 $.max-vertex-output-components;
    has uint32 $.max-tessellation-generation-level;
    has uint32 $.max-tessellation-patch-size;
    has uint32 $.max-tessellation-control-per-vertex-input-components;
    has uint32 $.max-tessellation-control-per-vertex-output-components;
    has uint32 $.max-tessellation-control-per-patch-output-components;
    has uint32 $.max-tessellation-control-total-output-components;
    has uint32 $.max-tessellation-evaluation-input-components;
    has uint32 $.max-tessellation-evaluation-output-components;
    has uint32 $.max-geometry-shader-invocations;
    has uint32 $.max-geometry-input-components;
    has uint32 $.max-geometry-output-components;
    has uint32 $.max-geometry-output-vertices;
    has uint32 $.max-fragment-input-components;
    has uint32 $.max-fragment-output-attachments;
    has uint32 $.max-fragment-dual-source-attachments;
    has uint32 $.max-fragment-combined-output-resources;
    has uint32 $.max-compute-shared-memory-size;
    has CArray[uint32] $.max-compute-work-group-count;
    has uint32 $.max-compute-work-group-invocations;
    has CArray[uint32] $.max-compute-work-group-size;
    has uint32 $.sub-pixel-precision-bits;
    has uint32 $.sub-texel-precision-bits;
    has uint32 $.mipmap-precision-bits;
    has uint32 $.max-draw-indexed-index-value;
    has uint32 $.max-draw-indirect-count;
    has num32 $.max-sampler-lod-bias;
    has num32 $.max-sampler-anisotropy;
    has uint32 $.max-viewports;
    has CArray[uint32] $.max-viewport-dimensions;
    has CArray[num32] $.viewport-bounds-range;
    has uint32 $.viewport-sub-pixel-bits;
    has size_t $.min-memory-map-alignment;
    has uint64 $.min-texel-buffer-offset-alignment;
    has uint64 $.min-uniform-buffer-offset-alignment;
    has uint64 $.min-storage-buffer-offset-alignment;
    has int32 $.min-texel-offset;
    has uint32 $.max-texel-offset;
    has int32 $.min-texel-gather-offset;
    has uint32 $.max-texel-gather-offset;
    has num32 $.min-interpolation-offset;
    has num32 $.max-interpolation-offset;
    has uint32 $.sub-pixel-interpolation-offset-bits;
    has uint32 $.max-framebuffer-width;
    has uint32 $.max-framebuffer-height;
    has uint32 $.max-framebuffer-layers;
    has uint32 $.framebuffer-color-sample-counts;
    has uint32 $.framebuffer-depth-sample-counts;
    has uint32 $.framebuffer-stencil-sample-counts;
    has uint32 $.framebuffer-no-attachments-sample-counts;
    has uint32 $.max-color-attachments;
    has uint32 $.sampled-image-color-sample-counts;
    has uint32 $.sampled-image-integer-sample-counts;
    has uint32 $.sampled-image-depth-sample-counts;
    has uint32 $.sampled-image-stencil-sample-counts;
    has uint32 $.storage-image-sample-counts;
    has uint32 $.max-sample-mask-words;
    has Bool $.timestamp-compute-and-graphics;
    has num32 $.timestamp-period;
    has uint32 $.max-clip-distances;
    has uint32 $.max-cull-distances;
    has uint32 $.max-combined-clip-and-cull-distances;
    has uint32 $.discrete-queue-priorities;
    has CArray[num32] $.point-size-range;
    has CArray[num32] $.line-width-range;
    has num32 $.point-size-granularity;
    has num32 $.line-width-granularity;
    has Bool $.strict-lines;
    has Bool $.standard-sample-locations;
    has uint64 $.optimal-buffer-copy-offset-alignment;
    has uint64 $.optimal-buffer-copy-row-pitch-alignment;
    has uint64 $.non-coherent-atom-size;
}
